name: Deploy
on:
  push:
    tags:
      - 'v*'
    branches: [main]
  pull_request:
    branches: ['*']
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  DOCKER_BUILD_SUMMARY: true
  DAGGER_VERSION: '0.16.3'
  DOCKERFILE: './zarf/docker/Dockerfile'
  GITHUB_TOKEN: ${{ secrets.REGISTRY_TOKEN }}

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: lint
        uses: dagger/dagger-for-github@main
        with:
          version: ${{ env.DAGGER_VERSION }}
          verb: call
          args: lint --src .
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}

  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: lint
        uses: dagger/dagger-for-github@main
        with:
          version: ${{ env.DAGGER_VERSION }}
          verb: call
          args: test --src .
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
  build:
    name: build
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: build
        uses: dagger/dagger-for-github@main
        with:
          version: ${{ env.DAGGER_VERSION }}
          verb: call
          args: build --src . --dockerfile ${{ env.DOCKERFILE }}
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}

  publish:
    name: publish
    needs: [lint, test, build]
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: Set Docker tags
        id: tags
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "tags={GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "tags=latest" >> $GITHUB_OUTPUT
          fi
      - name: publish
        uses: dagger/dagger-for-github@main
        with:
          version: ${{ env.DAGGER_VERSION }}
          verb: call
          args: publish --build-context . --dockerfile ${{ env.DOCKERFILE }} --registry ${{ env.REGISTRY }} --registry-username ${{ github.actor }} --registry-password env:GITHUB_TOKEN --image-name ${{ github.repository }} --tags "${{ steps.tags.outputs.tags }}"
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
